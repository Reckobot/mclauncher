# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
    tags: [ "v*", "ci-test/**" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-tags: true
        fetch-depth: 1
        ref: ${{ github.ref }}
    - name: Git setup
      run: git config --global commit.gpgsign false && git config --global user.email olauncher@example.com && git config --global user.name olauncher
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Set up OLauncher
      run: bash decompile.sh && bash init.sh && bash applyPatches.sh
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify
    - name: Generate redistributable
      run: bash genredist.sh
    - name: Upload redistributable
      uses: actions/upload-artifact@v4
      id: upload-artifact
      with:
        name: OLauncher Redistributable JAR
        path: mclauncher-*-redist.jar

  draft-release:
    if: ${{ github.ref_type == 'tag' }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download redistributable jar
        uses: actions/download-artifact@v4
        id: download-artifact
        with:
          artifact-ids: ${{ needs.build.outputs.artifact-id }}
          merge-multiple: true
          path: redist
      - name: Create release draft with redistributable
        env:
          RELEASE_TAG: ${{ github.ref_name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          ARTIFACT_PATH: ${{ steps.download-artifact.outputs.download-path }}
        run: gh release create "$RELEASE_TAG" --draft --verify-tag --title "$RELEASE_TAG" "$ARTIFACT_PATH"/*.jar
